//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by slsvcutil, version 3.0.40818.0
// 
/********************************************************
*                                                       *
*   Copyright (C) Microsoft. All rights reserved.   *
*                                                       *
********************************************************/

namespace Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "OperationRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest))]
    public partial class OperationRequest : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string RequestIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestIdField, value) != true))
                {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateConversationRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class CreateConversationRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationRequest
    {

        private System.Collections.Generic.Dictionary<string, string> ConversationContextField;

        private string ConversationSubjectField;

        private string DisplayNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ConversationContext
        {
            get
            {
                return this.ConversationContextField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConversationContextField, value) != true))
                {
                    this.ConversationContextField = value;
                    this.RaisePropertyChanged("ConversationContext");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConversationSubject
        {
            get
            {
                return this.ConversationSubjectField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConversationSubjectField, value) != true))
                {
                    this.ConversationSubjectField = value;
                    this.RaisePropertyChanged("ConversationSubject");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true))
                {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ConversationOperationRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest))]
    public partial class ConversationOperationRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationRequest
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation ConversationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation Conversation
        {
            get
            {
                return this.ConversationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConversationField, value) != true))
                {
                    this.ConversationField = value;
                    this.RaisePropertyChanged("Conversation");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LocalComposingStateRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class LocalComposingStateRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationRequest
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EstablishInstantMessagingCallRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class EstablishInstantMessagingCallRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationRequest
    {

        private string DestinationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination
        {
            get
            {
                return this.DestinationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationField, value) != true))
                {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EstablishAudioVideoCallRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class EstablishAudioVideoCallRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationRequest
    {

        private string CallbackPhoneNumberField;

        private string DestinationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallbackPhoneNumber
        {
            get
            {
                return this.CallbackPhoneNumberField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CallbackPhoneNumberField, value) != true))
                {
                    this.CallbackPhoneNumberField = value;
                    this.RaisePropertyChanged("CallbackPhoneNumber");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination
        {
            get
            {
                return this.DestinationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DestinationField, value) != true))
                {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SendInstantMessageRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class SendInstantMessageRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationRequest
    {

        private string MessageField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TerminateConversationRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class TerminateConversationRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationRequest
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SessionTerminationRequest", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class SessionTerminationRequest : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationRequest
    {

        private System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation> ConversationsField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation> Conversations
        {
            get
            {
                return this.ConversationsField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConversationsField, value) != true))
                {
                    this.ConversationsField = value;
                    this.RaisePropertyChanged("Conversations");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WebConversation", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class WebConversation : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string IdField;

        private string SubjectField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((object.ReferenceEquals(this.IdField, value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SubjectField, value) != true))
                {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "OperationResponse", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse))]
    public partial class OperationResponse : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationRequest RequestField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationRequest Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                if ((object.ReferenceEquals(this.RequestField, value) != true))
                {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EstablishAudioVideoCallResponse", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class EstablishAudioVideoCallResponse : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationResponse
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebAvCall AvCallField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebAvCall AvCall
        {
            get
            {
                return this.AvCallField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AvCallField, value) != true))
                {
                    this.AvCallField = value;
                    this.RaisePropertyChanged("AvCall");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EstablishInstantMessagingCallResponse", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class EstablishInstantMessagingCallResponse : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationResponse
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCallField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCall
        {
            get
            {
                return this.ImCallField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImCallField, value) != true))
                {
                    this.ImCallField = value;
                    this.RaisePropertyChanged("ImCall");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SendInstantMessageResponse", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class SendInstantMessageResponse : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationResponse
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TerminateConversationResponse", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class TerminateConversationResponse : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationResponse
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CreateConversationResponse", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class CreateConversationResponse : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationResponse
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation ConversationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation Conversation
        {
            get
            {
                return this.ConversationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConversationField, value) != true))
                {
                    this.ConversationField = value;
                    this.RaisePropertyChanged("Conversation");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WebAvCall", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class WebAvCall : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation WebConversationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation WebConversation
        {
            get
            {
                return this.WebConversationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.WebConversationField, value) != true))
                {
                    this.WebConversationField = value;
                    this.RaisePropertyChanged("WebConversation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WebImCall", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class WebImCall : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation WebConversationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation WebConversation
        {
            get
            {
                return this.WebConversationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.WebConversationField, value) != true))
                {
                    this.WebConversationField = value;
                    this.RaisePropertyChanged("WebConversation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "OperationFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault))]
    public partial class OperationFault : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string InnerExceptionMessageField;

        private string MessageField;

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.FaultSource SourceField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerExceptionMessage
        {
            get
            {
                return this.InnerExceptionMessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.InnerExceptionMessageField, value) != true))
                {
                    this.InnerExceptionMessageField = value;
                    this.RaisePropertyChanged("InnerExceptionMessage");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageField, value) != true))
                {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.FaultSource Source
        {
            get
            {
                return this.SourceField;
            }
            set
            {
                if ((this.SourceField.Equals(value) != true))
                {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class ArgumentFault : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationFault
    {

        private string ParamNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParamName
        {
            get
            {
                return this.ParamNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ParamNameField, value) != true))
                {
                    this.ParamNameField = value;
                    this.RaisePropertyChanged("ParamName");
                }
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FaultSource", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public enum FaultSource : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Client = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Server = 1,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ContactCenterEmployee", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class ContactCenterEmployee : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.PresenceSubscription
    {

        private string DepartmentField;

        private long EmployeeIdField;

        private string TitleField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department
        {
            get
            {
                return this.DepartmentField;
            }
            set
            {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true))
                {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EmployeeId
        {
            get
            {
                return this.EmployeeIdField;
            }
            set
            {
                if ((this.EmployeeIdField.Equals(value) != true))
                {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TitleField, value) != true))
                {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PresenceSubscription", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee))]
    public partial class PresenceSubscription : object, System.ComponentModel.INotifyPropertyChanged
    {

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RemoteComposingStatusNotification", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class RemoteComposingStatusNotification : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCallField;

        private string ParticipantField;

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.RemoteComposingStatus RemoteComposingStatusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCall
        {
            get
            {
                return this.ImCallField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImCallField, value) != true))
                {
                    this.ImCallField = value;
                    this.RaisePropertyChanged("ImCall");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant
        {
            get
            {
                return this.ParticipantField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ParticipantField, value) != true))
                {
                    this.ParticipantField = value;
                    this.RaisePropertyChanged("Participant");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.RemoteComposingStatus RemoteComposingStatus
        {
            get
            {
                return this.RemoteComposingStatusField;
            }
            set
            {
                if ((this.RemoteComposingStatusField.Equals(value) != true))
                {
                    this.RemoteComposingStatusField = value;
                    this.RaisePropertyChanged("RemoteComposingStatus");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RemoteComposingStatus", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public enum RemoteComposingStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "InstantMessageReceivedNotification", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class InstantMessageReceivedNotification : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCallField;

        private int MessageIdField;

        private string MessageReceivedField;

        private string MessageSenderField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCall
        {
            get
            {
                return this.ImCallField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImCallField, value) != true))
                {
                    this.ImCallField = value;
                    this.RaisePropertyChanged("ImCall");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId
        {
            get
            {
                return this.MessageIdField;
            }
            set
            {
                if ((this.MessageIdField.Equals(value) != true))
                {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageReceived
        {
            get
            {
                return this.MessageReceivedField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageReceivedField, value) != true))
                {
                    this.MessageReceivedField = value;
                    this.RaisePropertyChanged("MessageReceived");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageSender
        {
            get
            {
                return this.MessageSenderField;
            }
            set
            {
                if ((object.ReferenceEquals(this.MessageSenderField, value) != true))
                {
                    this.MessageSenderField = value;
                    this.RaisePropertyChanged("MessageSender");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "InstantMessageCallTerminationNotification", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class InstantMessageCallTerminationNotification : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCallField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebImCall ImCall
        {
            get
            {
                return this.ImCallField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImCallField, value) != true))
                {
                    this.ImCallField = value;
                    this.RaisePropertyChanged("ImCall");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AudioVideoCallTerminationNotification", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class AudioVideoCallTerminationNotification : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebAvCall AvCallField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebAvCall AvCall
        {
            get
            {
                return this.AvCallField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AvCallField, value) != true))
                {
                    this.AvCallField = value;
                    this.RaisePropertyChanged("AvCall");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ConversationOperationNotification", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationTerminationNotification))]
    public partial class ConversationOperationNotification : object, System.ComponentModel.INotifyPropertyChanged
    {

        private Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation ConversationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.WebConversation Conversation
        {
            get
            {
                return this.ConversationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ConversationField, value) != true))
                {
                    this.ConversationField = value;
                    this.RaisePropertyChanged("Conversation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ConversationTerminationNotification", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
        "ctCenterWcfService.Entities")]
    public partial class ConversationTerminationNotification : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationOperationNotification
    {
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfServ" +
        "ice", CallbackContract = typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfServiceCallback))]
    public interface IContactCenterWcfService
    {

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/SessionTerminated")]
        System.IAsyncResult BeginSessionTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest request, System.AsyncCallback callback, object asyncState);

        void EndSessionTerminated(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/CreateConversation", ReplyAction = "http://tempuri.org/IContactCenterWcfService/CreateConversationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationFault), Action = "http://tempuri.org/IContactCenterWcfService/CreateConversationOperationFaultFault" +
            "", Name = "OperationFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault), Action = "http://tempuri.org/IContactCenterWcfService/CreateConversationArgumentFaultFault", Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        System.IAsyncResult BeginCreateConversation(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest request, System.AsyncCallback callback, object asyncState);

        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse EndCreateConversation(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/EstablishInstantMessagingCall", ReplyAction = "http://tempuri.org/IContactCenterWcfService/EstablishInstantMessagingCallResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationFault), Action = "http://tempuri.org/IContactCenterWcfService/EstablishInstantMessagingCallOperatio" +
            "nFaultFault", Name = "OperationFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault), Action = "http://tempuri.org/IContactCenterWcfService/EstablishInstantMessagingCallArgument" +
            "FaultFault", Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        System.IAsyncResult BeginEstablishInstantMessagingCall(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest request, System.AsyncCallback callback, object asyncState);

        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse EndEstablishInstantMessagingCall(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/SendInstantMessage", ReplyAction = "http://tempuri.org/IContactCenterWcfService/SendInstantMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault), Action = "http://tempuri.org/IContactCenterWcfService/SendInstantMessageArgumentFaultFault", Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationFault), Action = "http://tempuri.org/IContactCenterWcfService/SendInstantMessageOperationFaultFault" +
            "", Name = "OperationFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        System.IAsyncResult BeginSendInstantMessage(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest request, System.AsyncCallback callback, object asyncState);

        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse EndSendInstantMessage(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/EstablishAudioVideoCall", ReplyAction = "http://tempuri.org/IContactCenterWcfService/EstablishAudioVideoCallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault), Action = "http://tempuri.org/IContactCenterWcfService/EstablishAudioVideoCallArgumentFaultF" +
            "ault", Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationFault), Action = "http://tempuri.org/IContactCenterWcfService/EstablishAudioVideoCallOperationFault" +
            "Fault", Name = "OperationFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        System.IAsyncResult BeginEstablishAudioVideoCall(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest request, System.AsyncCallback callback, object asyncState);

        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse EndEstablishAudioVideoCall(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/TerminateConversation", ReplyAction = "http://tempuri.org/IContactCenterWcfService/TerminateConversationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.OperationFault), Action = "http://tempuri.org/IContactCenterWcfService/TerminateConversationOperationFaultFa" +
            "ult", Name = "OperationFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault), Action = "http://tempuri.org/IContactCenterWcfService/TerminateConversationArgumentFaultFau" +
            "lt", Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        System.IAsyncResult BeginTerminateConversation(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest request, System.AsyncCallback callback, object asyncState);

        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse EndTerminateConversation(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/SetLocalComposingState", ReplyAction = "http://tempuri.org/IContactCenterWcfService/SetLocalComposingStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ArgumentFault), Action = "http://tempuri.org/IContactCenterWcfService/SetLocalComposingStateArgumentFaultFa" +
            "ult", Name = "ArgumentFault", Namespace = "http://schemas.datacontract.org/2004/07/Microsoft.Rtc.Collaboration.Samples.Conta" +
            "ctCenterWcfService.Entities")]
        System.IAsyncResult BeginSetLocalComposingState(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest request, System.AsyncCallback callback, object asyncState);

        void EndSetLocalComposingState(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IContactCenterWcfService/GetPresence", ReplyAction = "http://tempuri.org/IContactCenterWcfService/GetPresenceResponse")]
        System.IAsyncResult BeginGetPresence(string userId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee> EndGetPresence(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IContactCenterWcfServiceCallback
    {

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IContactCenterWcfService/RemoteComposingStatus")]
        void RemoteComposingStatus(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.RemoteComposingStatusNotification remoteComposingStatusNotification);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IContactCenterWcfService/InstantMessageReceived")]
        void InstantMessageReceived(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageReceivedNotification imReceivedNotification);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IContactCenterWcfService/InstantMessageCallTerminated")]
        void InstantMessageCallTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageCallTerminationNotification imCallTerminationNotification);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IContactCenterWcfService/AudioVideoCallTerminated")]
        void AudioVideoCallTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.AudioVideoCallTerminationNotification audioVideoCallTerminationNotification);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IContactCenterWcfService/ConversationTerminated")]
        void ConversationTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationTerminationNotification conversationTerminationNotification);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IContactCenterWcfServiceChannel : Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateConversationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public CreateConversationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class EstablishInstantMessagingCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public EstablishInstantMessagingCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SendInstantMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public SendInstantMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class EstablishAudioVideoCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public EstablishAudioVideoCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class TerminateConversationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public TerminateConversationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPresenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetPresenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ContactCenterWcfServiceClient : System.ServiceModel.DuplexClientBase<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService>, Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService
    {

        private BeginOperationDelegate onBeginSessionTerminatedDelegate;

        private EndOperationDelegate onEndSessionTerminatedDelegate;

        private System.Threading.SendOrPostCallback onSessionTerminatedCompletedDelegate;

        private BeginOperationDelegate onBeginCreateConversationDelegate;

        private EndOperationDelegate onEndCreateConversationDelegate;

        private System.Threading.SendOrPostCallback onCreateConversationCompletedDelegate;

        private BeginOperationDelegate onBeginEstablishInstantMessagingCallDelegate;

        private EndOperationDelegate onEndEstablishInstantMessagingCallDelegate;

        private System.Threading.SendOrPostCallback onEstablishInstantMessagingCallCompletedDelegate;

        private BeginOperationDelegate onBeginSendInstantMessageDelegate;

        private EndOperationDelegate onEndSendInstantMessageDelegate;

        private System.Threading.SendOrPostCallback onSendInstantMessageCompletedDelegate;

        private BeginOperationDelegate onBeginEstablishAudioVideoCallDelegate;

        private EndOperationDelegate onEndEstablishAudioVideoCallDelegate;

        private System.Threading.SendOrPostCallback onEstablishAudioVideoCallCompletedDelegate;

        private BeginOperationDelegate onBeginTerminateConversationDelegate;

        private EndOperationDelegate onEndTerminateConversationDelegate;

        private System.Threading.SendOrPostCallback onTerminateConversationCompletedDelegate;

        private BeginOperationDelegate onBeginSetLocalComposingStateDelegate;

        private EndOperationDelegate onEndSetLocalComposingStateDelegate;

        private System.Threading.SendOrPostCallback onSetLocalComposingStateCompletedDelegate;

        private BeginOperationDelegate onBeginGetPresenceDelegate;

        private EndOperationDelegate onEndGetPresenceDelegate;

        private System.Threading.SendOrPostCallback onGetPresenceCompletedDelegate;

        private bool useGeneratedCallback;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public ContactCenterWcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(callbackInstance, binding, remoteAddress)
        {
        }

        public ContactCenterWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            this(new ContactCenterWcfServiceClientCallback(), binding, remoteAddress)
        {
        }

        private ContactCenterWcfServiceClient(ContactCenterWcfServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SessionTerminatedCompleted;

        public event System.EventHandler<CreateConversationCompletedEventArgs> CreateConversationCompleted;

        public event System.EventHandler<EstablishInstantMessagingCallCompletedEventArgs> EstablishInstantMessagingCallCompleted;

        public event System.EventHandler<SendInstantMessageCompletedEventArgs> SendInstantMessageCompleted;

        public event System.EventHandler<EstablishAudioVideoCallCompletedEventArgs> EstablishAudioVideoCallCompleted;

        public event System.EventHandler<TerminateConversationCompletedEventArgs> TerminateConversationCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetLocalComposingStateCompleted;

        public event System.EventHandler<GetPresenceCompletedEventArgs> GetPresenceCompleted;

        public event System.EventHandler<RemoteComposingStatusReceivedEventArgs> RemoteComposingStatusReceived;

        public event System.EventHandler<InstantMessageReceivedReceivedEventArgs> InstantMessageReceivedReceived;

        public event System.EventHandler<InstantMessageCallTerminatedReceivedEventArgs> InstantMessageCallTerminatedReceived;

        public event System.EventHandler<AudioVideoCallTerminatedReceivedEventArgs> AudioVideoCallTerminatedReceived;

        public event System.EventHandler<ConversationTerminatedReceivedEventArgs> ConversationTerminatedReceived;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginSessionTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSessionTerminated(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndSessionTerminated(System.IAsyncResult result)
        {
            base.Channel.EndSessionTerminated(result);
        }

        private System.IAsyncResult OnBeginSessionTerminated(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginSessionTerminated(request, callback, asyncState);
        }

        private object[] OnEndSessionTerminated(System.IAsyncResult result)
        {
            ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndSessionTerminated(result);
            return null;
        }

        private void OnSessionTerminatedCompleted(object state)
        {
            if ((this.SessionTerminatedCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SessionTerminatedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SessionTerminatedAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest request)
        {
            this.SessionTerminatedAsync(request, null);
        }

        public void SessionTerminatedAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest request, object userState)
        {
            if ((this.onBeginSessionTerminatedDelegate == null))
            {
                this.onBeginSessionTerminatedDelegate = new BeginOperationDelegate(this.OnBeginSessionTerminated);
            }
            if ((this.onEndSessionTerminatedDelegate == null))
            {
                this.onEndSessionTerminatedDelegate = new EndOperationDelegate(this.OnEndSessionTerminated);
            }
            if ((this.onSessionTerminatedCompletedDelegate == null))
            {
                this.onSessionTerminatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSessionTerminatedCompleted);
            }
            base.InvokeAsync(this.onBeginSessionTerminatedDelegate, new object[] {
                        request}, this.onEndSessionTerminatedDelegate, this.onSessionTerminatedCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginCreateConversation(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCreateConversation(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndCreateConversation(System.IAsyncResult result)
        {
            return base.Channel.EndCreateConversation(result);
        }

        private System.IAsyncResult OnBeginCreateConversation(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginCreateConversation(request, callback, asyncState);
        }

        private object[] OnEndCreateConversation(System.IAsyncResult result)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse retVal = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndCreateConversation(result);
            return new object[] {
                    retVal};
        }

        private void OnCreateConversationCompleted(object state)
        {
            if ((this.CreateConversationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateConversationCompleted(this, new CreateConversationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CreateConversationAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest request)
        {
            this.CreateConversationAsync(request, null);
        }

        public void CreateConversationAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest request, object userState)
        {
            if ((this.onBeginCreateConversationDelegate == null))
            {
                this.onBeginCreateConversationDelegate = new BeginOperationDelegate(this.OnBeginCreateConversation);
            }
            if ((this.onEndCreateConversationDelegate == null))
            {
                this.onEndCreateConversationDelegate = new EndOperationDelegate(this.OnEndCreateConversation);
            }
            if ((this.onCreateConversationCompletedDelegate == null))
            {
                this.onCreateConversationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateConversationCompleted);
            }
            base.InvokeAsync(this.onBeginCreateConversationDelegate, new object[] {
                        request}, this.onEndCreateConversationDelegate, this.onCreateConversationCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginEstablishInstantMessagingCall(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginEstablishInstantMessagingCall(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndEstablishInstantMessagingCall(System.IAsyncResult result)
        {
            return base.Channel.EndEstablishInstantMessagingCall(result);
        }

        private System.IAsyncResult OnBeginEstablishInstantMessagingCall(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginEstablishInstantMessagingCall(request, callback, asyncState);
        }

        private object[] OnEndEstablishInstantMessagingCall(System.IAsyncResult result)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse retVal = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndEstablishInstantMessagingCall(result);
            return new object[] {
                    retVal};
        }

        private void OnEstablishInstantMessagingCallCompleted(object state)
        {
            if ((this.EstablishInstantMessagingCallCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EstablishInstantMessagingCallCompleted(this, new EstablishInstantMessagingCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void EstablishInstantMessagingCallAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest request)
        {
            this.EstablishInstantMessagingCallAsync(request, null);
        }

        public void EstablishInstantMessagingCallAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest request, object userState)
        {
            if ((this.onBeginEstablishInstantMessagingCallDelegate == null))
            {
                this.onBeginEstablishInstantMessagingCallDelegate = new BeginOperationDelegate(this.OnBeginEstablishInstantMessagingCall);
            }
            if ((this.onEndEstablishInstantMessagingCallDelegate == null))
            {
                this.onEndEstablishInstantMessagingCallDelegate = new EndOperationDelegate(this.OnEndEstablishInstantMessagingCall);
            }
            if ((this.onEstablishInstantMessagingCallCompletedDelegate == null))
            {
                this.onEstablishInstantMessagingCallCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEstablishInstantMessagingCallCompleted);
            }
            base.InvokeAsync(this.onBeginEstablishInstantMessagingCallDelegate, new object[] {
                        request}, this.onEndEstablishInstantMessagingCallDelegate, this.onEstablishInstantMessagingCallCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginSendInstantMessage(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSendInstantMessage(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndSendInstantMessage(System.IAsyncResult result)
        {
            return base.Channel.EndSendInstantMessage(result);
        }

        private System.IAsyncResult OnBeginSendInstantMessage(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginSendInstantMessage(request, callback, asyncState);
        }

        private object[] OnEndSendInstantMessage(System.IAsyncResult result)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse retVal = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndSendInstantMessage(result);
            return new object[] {
                    retVal};
        }

        private void OnSendInstantMessageCompleted(object state)
        {
            if ((this.SendInstantMessageCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendInstantMessageCompleted(this, new SendInstantMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SendInstantMessageAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest request)
        {
            this.SendInstantMessageAsync(request, null);
        }

        public void SendInstantMessageAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest request, object userState)
        {
            if ((this.onBeginSendInstantMessageDelegate == null))
            {
                this.onBeginSendInstantMessageDelegate = new BeginOperationDelegate(this.OnBeginSendInstantMessage);
            }
            if ((this.onEndSendInstantMessageDelegate == null))
            {
                this.onEndSendInstantMessageDelegate = new EndOperationDelegate(this.OnEndSendInstantMessage);
            }
            if ((this.onSendInstantMessageCompletedDelegate == null))
            {
                this.onSendInstantMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendInstantMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendInstantMessageDelegate, new object[] {
                        request}, this.onEndSendInstantMessageDelegate, this.onSendInstantMessageCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginEstablishAudioVideoCall(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginEstablishAudioVideoCall(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndEstablishAudioVideoCall(System.IAsyncResult result)
        {
            return base.Channel.EndEstablishAudioVideoCall(result);
        }

        private System.IAsyncResult OnBeginEstablishAudioVideoCall(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginEstablishAudioVideoCall(request, callback, asyncState);
        }

        private object[] OnEndEstablishAudioVideoCall(System.IAsyncResult result)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse retVal = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndEstablishAudioVideoCall(result);
            return new object[] {
                    retVal};
        }

        private void OnEstablishAudioVideoCallCompleted(object state)
        {
            if ((this.EstablishAudioVideoCallCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EstablishAudioVideoCallCompleted(this, new EstablishAudioVideoCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void EstablishAudioVideoCallAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest request)
        {
            this.EstablishAudioVideoCallAsync(request, null);
        }

        public void EstablishAudioVideoCallAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest request, object userState)
        {
            if ((this.onBeginEstablishAudioVideoCallDelegate == null))
            {
                this.onBeginEstablishAudioVideoCallDelegate = new BeginOperationDelegate(this.OnBeginEstablishAudioVideoCall);
            }
            if ((this.onEndEstablishAudioVideoCallDelegate == null))
            {
                this.onEndEstablishAudioVideoCallDelegate = new EndOperationDelegate(this.OnEndEstablishAudioVideoCall);
            }
            if ((this.onEstablishAudioVideoCallCompletedDelegate == null))
            {
                this.onEstablishAudioVideoCallCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEstablishAudioVideoCallCompleted);
            }
            base.InvokeAsync(this.onBeginEstablishAudioVideoCallDelegate, new object[] {
                        request}, this.onEndEstablishAudioVideoCallDelegate, this.onEstablishAudioVideoCallCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginTerminateConversation(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginTerminateConversation(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndTerminateConversation(System.IAsyncResult result)
        {
            return base.Channel.EndTerminateConversation(result);
        }

        private System.IAsyncResult OnBeginTerminateConversation(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginTerminateConversation(request, callback, asyncState);
        }

        private object[] OnEndTerminateConversation(System.IAsyncResult result)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse retVal = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndTerminateConversation(result);
            return new object[] {
                    retVal};
        }

        private void OnTerminateConversationCompleted(object state)
        {
            if ((this.TerminateConversationCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TerminateConversationCompleted(this, new TerminateConversationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void TerminateConversationAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest request)
        {
            this.TerminateConversationAsync(request, null);
        }

        public void TerminateConversationAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest request, object userState)
        {
            if ((this.onBeginTerminateConversationDelegate == null))
            {
                this.onBeginTerminateConversationDelegate = new BeginOperationDelegate(this.OnBeginTerminateConversation);
            }
            if ((this.onEndTerminateConversationDelegate == null))
            {
                this.onEndTerminateConversationDelegate = new EndOperationDelegate(this.OnEndTerminateConversation);
            }
            if ((this.onTerminateConversationCompletedDelegate == null))
            {
                this.onTerminateConversationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTerminateConversationCompleted);
            }
            base.InvokeAsync(this.onBeginTerminateConversationDelegate, new object[] {
                        request}, this.onEndTerminateConversationDelegate, this.onTerminateConversationCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginSetLocalComposingState(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSetLocalComposingState(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndSetLocalComposingState(System.IAsyncResult result)
        {
            base.Channel.EndSetLocalComposingState(result);
        }

        private System.IAsyncResult OnBeginSetLocalComposingState(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest request = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginSetLocalComposingState(request, callback, asyncState);
        }

        private object[] OnEndSetLocalComposingState(System.IAsyncResult result)
        {
            ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndSetLocalComposingState(result);
            return null;
        }

        private void OnSetLocalComposingStateCompleted(object state)
        {
            if ((this.SetLocalComposingStateCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetLocalComposingStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SetLocalComposingStateAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest request)
        {
            this.SetLocalComposingStateAsync(request, null);
        }

        public void SetLocalComposingStateAsync(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest request, object userState)
        {
            if ((this.onBeginSetLocalComposingStateDelegate == null))
            {
                this.onBeginSetLocalComposingStateDelegate = new BeginOperationDelegate(this.OnBeginSetLocalComposingState);
            }
            if ((this.onEndSetLocalComposingStateDelegate == null))
            {
                this.onEndSetLocalComposingStateDelegate = new EndOperationDelegate(this.OnEndSetLocalComposingState);
            }
            if ((this.onSetLocalComposingStateCompletedDelegate == null))
            {
                this.onSetLocalComposingStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLocalComposingStateCompleted);
            }
            base.InvokeAsync(this.onBeginSetLocalComposingStateDelegate, new object[] {
                        request}, this.onEndSetLocalComposingStateDelegate, this.onSetLocalComposingStateCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.BeginGetPresence(string userId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetPresence(userId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee> Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService.EndGetPresence(System.IAsyncResult result)
        {
            return base.Channel.EndGetPresence(result);
        }

        private System.IAsyncResult OnBeginGetPresence(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string userId = ((string)(inValues[0]));
            return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).BeginGetPresence(userId, callback, asyncState);
        }

        private object[] OnEndGetPresence(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee> retVal = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService)(this)).EndGetPresence(result);
            return new object[] {
                    retVal};
        }

        private void OnGetPresenceCompleted(object state)
        {
            if ((this.GetPresenceCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPresenceCompleted(this, new GetPresenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetPresenceAsync(string userId)
        {
            this.GetPresenceAsync(userId, null);
        }

        public void GetPresenceAsync(string userId, object userState)
        {
            if ((this.onBeginGetPresenceDelegate == null))
            {
                this.onBeginGetPresenceDelegate = new BeginOperationDelegate(this.OnBeginGetPresence);
            }
            if ((this.onEndGetPresenceDelegate == null))
            {
                this.onEndGetPresenceDelegate = new EndOperationDelegate(this.OnEndGetPresence);
            }
            if ((this.onGetPresenceCompletedDelegate == null))
            {
                this.onGetPresenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPresenceCompleted);
            }
            base.InvokeAsync(this.onBeginGetPresenceDelegate, new object[] {
                        userId}, this.onEndGetPresenceDelegate, this.onGetPresenceCompletedDelegate, userState);
        }

        private void OnRemoteComposingStatusReceived(object state)
        {
            if ((this.RemoteComposingStatusReceived != null))
            {
                object[] results = ((object[])(state));
                this.RemoteComposingStatusReceived(this, new RemoteComposingStatusReceivedEventArgs(results, null, false, null));
            }
        }

        private void OnInstantMessageReceivedReceived(object state)
        {
            if ((this.InstantMessageReceivedReceived != null))
            {
                object[] results = ((object[])(state));
                this.InstantMessageReceivedReceived(this, new InstantMessageReceivedReceivedEventArgs(results, null, false, null));
            }
        }

        private void OnInstantMessageCallTerminatedReceived(object state)
        {
            if ((this.InstantMessageCallTerminatedReceived != null))
            {
                object[] results = ((object[])(state));
                this.InstantMessageCallTerminatedReceived(this, new InstantMessageCallTerminatedReceivedEventArgs(results, null, false, null));
            }
        }

        private void OnAudioVideoCallTerminatedReceived(object state)
        {
            if ((this.AudioVideoCallTerminatedReceived != null))
            {
                object[] results = ((object[])(state));
                this.AudioVideoCallTerminatedReceived(this, new AudioVideoCallTerminatedReceivedEventArgs(results, null, false, null));
            }
        }

        private void OnConversationTerminatedReceived(object state)
        {
            if ((this.ConversationTerminatedReceived != null))
            {
                object[] results = ((object[])(state));
                this.ConversationTerminatedReceived(this, new ConversationTerminatedReceivedEventArgs(results, null, false, null));
            }
        }

        private void VerifyCallbackEvents()
        {
            if (((this.useGeneratedCallback != true)
                        && (((((this.RemoteComposingStatusReceived != null)
                        || (this.InstantMessageReceivedReceived != null))
                        || (this.InstantMessageCallTerminatedReceived != null))
                        || (this.AudioVideoCallTerminatedReceived != null))
                        || (this.ConversationTerminatedReceived != null))))
            {
                throw new System.InvalidOperationException("Callback events cannot be used when the callback InstanceContext is specified. Pl" +
                        "ease choose between specifying the callback InstanceContext or subscribing to th" +
                        "e callback events.");
            }
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService CreateChannel()
        {
            return new ContactCenterWcfServiceClientChannel(this);
        }

        private class ContactCenterWcfServiceClientCallback : object, IContactCenterWcfServiceCallback
        {

            private ContactCenterWcfServiceClient proxy;

            public void Initialize(ContactCenterWcfServiceClient proxy)
            {
                this.proxy = proxy;
            }

            public void RemoteComposingStatus(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.RemoteComposingStatusNotification remoteComposingStatusNotification)
            {
                this.proxy.OnRemoteComposingStatusReceived(new object[] {
                            remoteComposingStatusNotification});
            }

            public void InstantMessageReceived(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageReceivedNotification imReceivedNotification)
            {
                this.proxy.OnInstantMessageReceivedReceived(new object[] {
                            imReceivedNotification});
            }

            public void InstantMessageCallTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageCallTerminationNotification imCallTerminationNotification)
            {
                this.proxy.OnInstantMessageCallTerminatedReceived(new object[] {
                            imCallTerminationNotification});
            }

            public void AudioVideoCallTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.AudioVideoCallTerminationNotification audioVideoCallTerminationNotification)
            {
                this.proxy.OnAudioVideoCallTerminatedReceived(new object[] {
                            audioVideoCallTerminationNotification});
            }

            public void ConversationTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationTerminationNotification conversationTerminationNotification)
            {
                this.proxy.OnConversationTerminatedReceived(new object[] {
                            conversationTerminationNotification});
            }
        }

        private class ContactCenterWcfServiceClientChannel : ChannelBase<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService>, Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService
        {

            public ContactCenterWcfServiceClientChannel(System.ServiceModel.DuplexClientBase<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.IContactCenterWcfService> client) :
                base(client)
            {
            }

            public System.IAsyncResult BeginSessionTerminated(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SessionTerminationRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SessionTerminated", _args, callback, asyncState);
                return _result;
            }

            public void EndSessionTerminated(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SessionTerminated", _args, result);
            }

            public System.IAsyncResult BeginCreateConversation(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CreateConversation", _args, callback, asyncState);
                return _result;
            }

            public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse EndCreateConversation(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse _result = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.CreateConversationResponse)(base.EndInvoke("CreateConversation", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginEstablishInstantMessagingCall(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("EstablishInstantMessagingCall", _args, callback, asyncState);
                return _result;
            }

            public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse EndEstablishInstantMessagingCall(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse _result = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishInstantMessagingCallResponse)(base.EndInvoke("EstablishInstantMessagingCall", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginSendInstantMessage(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SendInstantMessage", _args, callback, asyncState);
                return _result;
            }

            public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse EndSendInstantMessage(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse _result = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.SendInstantMessageResponse)(base.EndInvoke("SendInstantMessage", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginEstablishAudioVideoCall(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("EstablishAudioVideoCall", _args, callback, asyncState);
                return _result;
            }

            public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse EndEstablishAudioVideoCall(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse _result = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.EstablishAudioVideoCallResponse)(base.EndInvoke("EstablishAudioVideoCall", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginTerminateConversation(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("TerminateConversation", _args, callback, asyncState);
                return _result;
            }

            public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse EndTerminateConversation(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse _result = ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.TerminateConversationResponse)(base.EndInvoke("TerminateConversation", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginSetLocalComposingState(Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.LocalComposingStateRequest request, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SetLocalComposingState", _args, callback, asyncState);
                return _result;
            }

            public void EndSetLocalComposingState(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("SetLocalComposingState", _args, result);
            }

            public System.IAsyncResult BeginGetPresence(string userId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetPresence", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee> EndGetPresence(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee> _result = ((System.Collections.ObjectModel.ObservableCollection<Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ContactCenterEmployee>)(base.EndInvoke("GetPresence", _args, result)));
                return _result;
            }
        }
    }

    public class RemoteComposingStatusReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public RemoteComposingStatusReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.RemoteComposingStatusNotification remoteComposingStatusNotification
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.RemoteComposingStatusNotification)(this.results[0]));
            }
        }
    }

    public class InstantMessageReceivedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public InstantMessageReceivedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageReceivedNotification imReceivedNotification
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageReceivedNotification)(this.results[0]));
            }
        }
    }

    public class InstantMessageCallTerminatedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public InstantMessageCallTerminatedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageCallTerminationNotification imCallTerminationNotification
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.InstantMessageCallTerminationNotification)(this.results[0]));
            }
        }
    }

    public class AudioVideoCallTerminatedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public AudioVideoCallTerminatedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.AudioVideoCallTerminationNotification audioVideoCallTerminationNotification
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.AudioVideoCallTerminationNotification)(this.results[0]));
            }
        }
    }

    public class ConversationTerminatedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public ConversationTerminatedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationTerminationNotification conversationTerminationNotification
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Rtc.Collaboration.Samples.ContactCenter.WebClient.ConversationTerminationNotification)(this.results[0]));
            }
        }
    }
}
